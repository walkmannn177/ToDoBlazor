@page "/todoApp"
@using toDo.Models
@using Newtonsoft.Json


@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<div class="todo-container">
    <h1>Hello, world!</h1>
    <div class="todo-input">
        <input type="text" @bind="todoInput"/>
        <button @onclick="AddTodo">Add</button>
    </div>

    @for (int i = 0; i < todos.Count; i++)
    {
        var index = i;
        var todo = todos[i];

        <TodoItem 
            Model="@todo"
            SaveTodos="@SaveTodos"
            Index="@index"
            RemoveTodo="@RemoveTodo"
        />
    }
</div>

@code
{
    public string todoInput {get; set;}
    public List<Todo> todos = new List<Todo>();
    private const string TodoStorageKey = "SavedTodos";
    protected override async Task OnInitializedAsync()
    {
        todos = await GetStoredTodos();
    }
    public void AddTodo()
    {
        var todo = new Todo();
        todo.Title = todoInput;
        todos.Add(todo);
        todoInput = "";
        SaveTodos();
    }
    public void RemoveTodo(int index)
    {
        todos.RemoveAt(index);
        SaveTodos();
    }
    public void SaveTodos()
    {
        LocalStorage.SetItemAsync(TodoStorageKey, JsonConvert.SerializeObject(todos));
    }
    private async Task<List<Todo>> GetStoredTodos()
    {
        var storedTodos = await LocalStorage.GetItemAsync<string>(TodoStorageKey);
        return JsonConvert.DeserializeObject<List<Todo>>(storedTodos);
    }

}